{"version":3,"sources":["bundle.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","global","isObject","value","type","isObjectLike","isSymbol","objectToString","symbolTag","toNumber","NAN","other","valueOf","replace","reTrim","isBinary","reIsBinary","test","reIsOctal","freeParseInt","slice","reIsBadHex","FUNC_ERROR_TEXT","parseInt","freeGlobal","Object","freeSelf","self","root","Function","prototype","toString","nativeMax","Math","max","nativeMin","min","now","Date","func","wait","options","invokeFunc","time","args","lastArgs","thisArg","lastThis","undefined","lastInvokeTime","result","apply","leadingEdge","timerId","setTimeout","timerExpired","leading","remainingWait","timeSinceLastInvoke","lastCallTime","maxing","maxWait","shouldInvoke","timeSinceLastCall","trailingEdge","trailing","debounced","isInvoking","arguments","this","TypeError","cancel","clearTimeout","flush","window","2","debounce","3","_eventUtilityHelpers2","obj","__esModule","default","_interopRequireDefault","Helpers","./modules/event-utility-helpers","4","_classCallCheck","instance","Constructor","_guIDGenerator","String","fromCharCode","floor","random","defineProperty","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_objectTypesHelpers","_lodash2","_lodash4","_hasTouch","document","documentElement","navigator","userAgent","match","EventUtils","_winW","_winH","_resizeListeners","_scrollListeners","w","h","isNaN","innerWidth","clientWidth","clientHeight","innerHeight","listner","thisObject","_this2","id","objectScan","isFunction","_that","size","getWindowSize","handler","_id","callable","addEventListener","isString","listener","_this3","_this","body","scrollTop","scrollLeft","b","./objectTypes-helpers","lodash.debounce","lodash.throttle","5","_objTypes","val","arr","fn","res","push","hasOwnProperty","newObj","oldObj","prop","hasOwnProp","forEach","name"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],2:[function(require,module,exports){\n(function (global){\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],3:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _eventUtilityHelpers = require('./modules/event-utility-helpers');\n\nvar _eventUtilityHelpers2 = _interopRequireDefault(_eventUtilityHelpers);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nglobal.Helpers = _eventUtilityHelpers2.default;\n\n// var arr = [\n//   { util: EVENT_UTILITIES },\n// ];\n\n// global.Helpers = arr.reduce(function (result, item) {\n//   var key = Object.keys(item);\n//   result[key] = item[key];\n//   return result;\n// }, {});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./modules/event-utility-helpers\":4}],4:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nvar _objectTypesHelpers = require('./objectTypes-helpers');\n\nvar _lodash = require('lodash.debounce');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _lodash3 = require('lodash.throttle');\n\nvar _lodash4 = _interopRequireDefault(_lodash3);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/*****************************************************************************************************************\n\t * DOM EVENTS\n*****************************************************************************************************************/\n// NOTE: https://www.kirupa.com/javascript/classy_way_to_create_objects.html\n// https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id\n\nvar _hasTouch = 'ontouchstart' in document.documentElement && navigator.userAgent.match(/Mobi/);\n\nfunction _guIDGenerator() {\n  var randLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\n  var uniqID = randLetter + Date.now();\n  return uniqID;\n}\n\nvar EventUtils = function () {\n  function EventUtils() {\n    _classCallCheck(this, EventUtils);\n\n    this._winW = 0;\n    this._winH = 0;\n    this._resizeListeners = null;\n    this._scrollListeners = null;\n  }\n\n  _createClass(EventUtils, [{\n    key: 'getWindowSize',\n    value: function getWindowSize() {\n      this.w = 0;\n      this.h = 0;\n\n      if (!isNaN(global.innerWidth)) {\n        this.w = Math.min(global.innerWidth, global.document.documentElement.clientWidth);\n        this.h = global.innerHeight;\n      } else {\n        this.w = global.document.documentElement.clientWidth;\n        this.h = global.document.documentElement.clientHeight;\n      }\n      return {\n        w: this.w,\n        h: this.h\n      };\n    }\n  }, {\n    key: 'addResizeListener',\n    value: function addResizeListener(listner, thisObject) {\n      var _this2 = this;\n\n      var id = _guIDGenerator();\n\n      if (_objectTypesHelpers.objectScan.isFunction(listner)) {\n        var _that = thisObject !== undefined ? thisObject : global;\n\n        if (this._resizeListeners === null) {\n          this._resizeListeners = {};\n\n          var size = this.getWindowSize();\n\n          this._winW = size.w;\n          this._winH = size.h;\n\n          var handler = function handler() {\n            var size = _this2.getWindowSize();\n            _this2._winW = size.w;\n            _this2._winH = size.h;\n\n            for (var _id in _this2._resizeListeners) {\n              _this2._resizeListeners[_id].callable.call(_this2._resizeListeners[_id].thisObject, _this2._winW, _this2._winH);\n            }\n          };\n\n          global.addEventListener('resize', (0, _lodash2.default)(handler, 50), false);\n          global.addEventListener('orientationchange', function () {\n            setTimeout(handler, 1000);\n          }, false);\n        }\n\n        this._resizeListeners[id] = { callable: listner, thisObject: _that };\n        listner.call(_that, this._winW, this._winH);\n      }\n\n      return id;\n    }\n  }, {\n    key: 'removeResizeListener',\n    value: function removeResizeListener(id) {\n      if (this._resizeListeners !== null && _objectTypesHelpers.objectScan.isString(id) && id in this._resizeListeners) {\n        delete this._resizeListeners[id];\n      }\n    }\n  }, {\n    key: 'addScrollListener',\n    value: function addScrollListener(listener, thisObject) {\n      var _this3 = this;\n\n      var id = _guIDGenerator();\n\n      if (_objectTypesHelpers.objectScan.isFunction(listener)) {\n        var _this = thisObject !== undefined ? thisObject : global;\n\n        if (this._scrollListeners === null) {\n          this._scrollListeners = {};\n\n          var handler = function handler() {\n            var size = _this3.getWindowSize();\n            var t = global.document.body.scrollTop || global.document.documentElement.scrollTop;\n            var l = global.document.body.scrollLeft || global.document.documentElement.scrollLeft;\n            var b = t + size.h;\n            var r = l + size.w;\n\n            for (var _id in _this3._scrollListeners) {\n              _this3._scrollListeners[_id].callable.call(_this3._scrollListeners[_id].thisObject, t, b, l, r);\n            }\n          };\n\n          if (window.addEventListener) {\n            global.addEventListener('resize', (0, _lodash4.default)(handler, 100), false);\n            global.addEventListener('scroll', (0, _lodash4.default)(handler, 100), false);\n          }\n          if (_hasTouch && navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n            global.addEventListener('touchmove', handler, false);\n          }\n        }\n        this._scrollListeners[id] = { callable: listener, thisObject: _this };\n\n        if (global.document.body) {\n          var t = global.document.body.scrollTop || global.document.documentElement.scrollTop;\n          var l = global.document.body.scrollLeft || global.document.documentElement.scrollLeft;\n          var b = t + this._winH;\n          var r = l + this._winW;\n          listener.call(_this, t, b, l, r);\n        }\n      }\n\n      return id;\n    }\n  }, {\n    key: 'removeScrollListener',\n    value: function removeScrollListener(id) {\n      if (this._scrollListeners !== null && _objectTypesHelpers.objectScan.isString(id) && id in this._scrollListeners) {\n        delete this._scrollListeners[id];\n      }\n    }\n  }]);\n\n  return EventUtils;\n}();\n\n// NOTE: make it global from here directly ( equivalent to => global.EventUtils = new EventUtils())\n\n\nexports.default = new EventUtils();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./objectTypes-helpers\":5,\"lodash.debounce\":1,\"lodash.throttle\":2}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _objTypes = ['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Object', 'Array', 'Symbol'];\n\nvar objectScan = exports.objectScan = function () {\n    function objectScan() {\n        _classCallCheck(this, objectScan);\n    }\n\n    _createClass(objectScan, [{\n        key: 'getType',\n\n        /** This Returns Object Type */\n        value: function getType(val) {\n            return Object.prototype.toString.call(val);\n        }\n        /** This Checks and Return if Object is Defined */\n\n    }, {\n        key: 'isDefined',\n        value: function isDefined(val) {\n            return val !== void 0 || typeof val !== 'undefined';\n        }\n        /** Run a Map on an Array **/\n\n    }, {\n        key: 'map',\n        value: function map(arr, fn) {\n            var res = [];\n            for (var i = 0; i < arr.length; ++i) {\n                res.push(fn(arr[i], i));\n            }\n            arr = null;\n            return res;\n        }\n        /** Checks and Return if the prop is Objects own Property */\n\n    }, {\n        key: 'hasOwnProp',\n        value: function hasOwnProp(obj, val) {\n            return Object.prototype.hasOwnProperty.call(obj, val);\n        }\n        /** Extend properties from extending Object to initial Object */\n\n    }, {\n        key: 'extend',\n        value: function extend(newObj, oldObj) {\n            for (var prop in oldObj) {\n                if (hasOwnProp(oldObj, prop)) {\n                    newObj[prop] = oldObj[prop];\n                }\n            }\n            return newObj;\n        }\n    }]);\n\n    return objectScan;\n}();\n\nexports.default = _objTypes.forEach(function (name) {\n    objectScan['is' + name] = function (obj) {\n        return toString.call(obj) === '[object ' + name + ']';\n    };\n});\n\n},{}]},{},[3])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}